@{
    Layout = null;
}
<!DOCTYPE html>
<html>


<head>
    <meta name="viewport" content="width=device-width" />
    <title>Jarvis Query</title>
    <style>
        #tipsy{
                position: absolute;
                z-index: 200;
                background: rgb(255, 255, 255);
                display: none;
                width: 800px;
                height: 100px;
                text-align: center;
                line-height: 30px;
                border: 1px solid rgb(221, 221, 221);
                
        }
         pre {
                background-color: ghostwhite;
                border: 1px solid silver;
                padding: 10px 20px;
                margin: 20px;
            }

            .json-key {
                color: brown;
            }

            .json-value {
                color: navy;
            }

            .json-string {
                color: olive;
            }
    </style>

</head>
<body>
    <div id="tipsy" style="display:none;position:absolute;z-index:200;background:#fff;">

    </div>
    <div style="font-size:72px;text-align:center">Elastic Search</div>
    <div style="height:50px"></div>


    <div id="owner" style="margin:0 auto;width:100%;">

    </div>
    <div style="position: relative; outline: 0px; border: 0px; margin: 0px; padding: 0px;">
        <div style="position: absolute; outline: 0px; margin: 0px; padding: 0px; border: 0px; font-size: 32px; font-family: sans-serif; color: rgb(51, 51, 51); background: transparent; top: 0px; left: 0px; overflow: hidden; visibility: visible;">
        </div>
        <script>
            function AddDashBoard(jsonobj) {
                document.getElementById("JSONID").style.display = "block";
                document.getElementById("json").innerHTML = library.json.prettyPrint(jsonobj)

                $.ajax({
                    type: "POST",
                    url: "https://devsbx.haicpm.com/Auth/Login",
                    data: "{\"Username\": \"skogara@hostanalytics.com\",\"Password\": \"Subbu123!\",\"TenantCode\": \"Summer2017Sprint3\"}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: false,
                    success: function (data, textStatus) {
                        var key = data;
                        var headers = "",
                         beforeSendFn = function () { };
                        headers = {

                            "Accept": "application/json",
                            "Accept-Language": "en-US",
                            "Content-Type": "application/json"
                        };
                        beforeSendFn = function (xhr) {
                            xhr.setRequestHeader("APIKey", key);
                        }
                        $.ajax({
                            type: "POST",
                            url: "https://devsbx.haicpm.com/Dashboards/Save",
                            contentType: "application/json; charset=utf-8",
                            headers: headers,
                            beforeSend: beforeSendFn,
                            data: JSON.stringify(jsonobj),
                            async: false,
                            success: function (msg, textStatus) {

                            }, error: function (jqXHR, textStatus, errorThrown) {
                                alert('Error - ' + errorThrown + ' save to dashboard ' + textStatus);
                            }
                        });


                    }, error: function (jqXHR, textStatus, errorThrown) {
                        alert('Error - ' + errorThrown + ' api key prblem ' + textStatus);
                    }
                });
            }

            function GetLast(Input) {
                var InputArray = Input.split(" ");
                return InputArray[InputArray.length - 1];

            }

            function GetLabels(Input) {
                // alert(Input);
                var alabels;
                var labels;               
                $.ajax({
                    type: "POST",
                    url: "/ES/GetSuggestionLabels",
                    data: "{query :\"" + AutoCompleteTextField.input.value + "\"}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: false,
                    success: function (msg, textStatus) {                        
                        window.alabels = msg;                                           
                        labels = msg.map(a => a.Label);                                                
                    }, error: function (jqXHR, textStatus, errorThrown) {
                        alert('Error - ' + errorThrown);
                    }
                });

                return labels;
            }
            function Send() {
                var Data = [];
                $.ajax({
                    type: "POST",
                    url: "/ES/SearchQuery",
                    data: "{query :\"" + AutoCompleteTextField.input.value + "\"}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: false,
                    success: function (msg, textStatus) {
                        Data = msg;
                        alert(JSON.stringify(Data, null, 4));
                       // AddDashBoard(data);
                    }, error: function (jqXHR, textStatus, errorThrown) {
                        alert('Error - ' + errorThrown);
                    }
                });
                return Data;
            }
            var owner = document.getElementById('owner');
            var AutoCompleteTextField = completely(owner, {
                fontSize: '16px',
                fontFamily: "Georgia, 'Times New Roman', Times, serif",
                promptInnerHTML: '',
                backgroundColor: '#ffffff',
                color: '#8a97a0'

            });
            AutoCompleteTextField.input.style.fontSize = '16px';
            AutoCompleteTextField.input.style.margin = 0;
            AutoCompleteTextField.input.style.boxSizing = 'border-box';
            AutoCompleteTextField.onChange = function (Text) {
                var TextValue = AutoCompleteTextField.input.value.trim().toLowerCase();
                var LastWord = GetLast(TextValue);
                LastWord = LastWord.trim().toLowerCase();
                if (TextValue == "") {
                   // SuggesionList = ["Show"];
                }
                else if (LastWord == "show" || LastWord =="and") {
                    SuggesionList = GetLabels(TextValue);
                }
                else {
                    SuggesionList = GetLabels(TextValue);
                }

                AutoCompleteTextField.startFrom = Text.lastIndexOf(' ') + 1;
                AutoCompleteTextField.options = SuggesionList;
                AutoCompleteTextField.repaint();
            };
           
            function completely(c, f) {
                f = f || {};
                f.fontSize = f.fontSize || "10px";
                f.fontFamily = f.fontFamily || "sans-serif";
                f.promptInnerHTML = f.promptInnerHTML || "";
                f.color = f.color || "#333";
                f.hintColor = f.hintColor || "#333";
                f.backgroundColor = f.backgroundColor || "#e8eeef";
                f.dropDownBorderColor = f.dropDownBorderColor || "#f9f9f9";
                f.dropDownZIndex = f.dropDownZIndex || "100";
                f.dropDownOnHoverBackgroundColor = f.dropDownOnHoverBackgroundColor || "#e8eeef";
                var l = document.createElement("input");
                l.type = "text";
                l.spellcheck = false;
                l.style.fontSize = f.fontSize;
                l.style.fontFamily = f.fontFamily;
                l.style.margin = 0;
                l.style.outline = 0;
                l.style.padding = '7px';
                l.style.boxSizing = 'border-box';
                l.style.webkitBoxSizing = 'border-box';
                l.style.color = '#000000';
                l.style.boxShadow = '0 1px 0 #000000 insert';
                l.style.marginBottom = '30px';
                l.style.color = "#0000";
                l.style.backgroundColor = "#e8eeef ";
                l.style.width = "100%";
                l.style.outline = "0";
                l.style.border = "0";
                l.style.margin = "0";
                l.style.padding = "7px";
                var k = l.cloneNode();
                k.disabled = "";
                k.style.position = "absolute";
                k.style.top = "0";
                k.style.left = "0";
                k.style.borderColor = "#e8eeef";
                k.style.boxShadow = "none";
                k.style.color = "#000000";
                l.style.backgroundColor = "transparent";
                l.style.verticalAlign = "top";
                l.style.position = "relative";
                var b = document.createElement("div");
                b.style.position = "relative";
                b.style.outline = "0";
                b.style.border = "0";
                b.style.margin = "0";
                b.style.padding = "0";
                var e = document.createElement("div");
                e.style.position = "absolute";
                e.style.outline = "0";
                e.style.margin = "0";
                e.style.padding = "0";
                e.style.border = "0";
                e.style.fontSize = f.fontSize;
                e.style.fontFamily = f.fontFamily;
                e.style.color = f.color;
                e.style.backgroundColor = "transparent";
                e.style.top = "0";
                e.style.left = "0";
                e.style.overflow = "hidden";
                e.innerHTML = f.promptInnerHTML;
                e.style.background = "transparent";
                if (document.body === undefined) {
                    throw "document.body is undefined. The library was wired up incorrectly."
                }
                document.body.appendChild(e);
                var p = e.getBoundingClientRect().right;
                b.appendChild(e);
                e.style.visibility = "visible";
                e.style.left = "-" + p + "px";
                b.style.marginLeft = p + "px";
                b.appendChild(k);
                b.appendChild(l);
                var j = document.createElement("div");
                j.style.position = "absolute";
                j.style.visibility = "hidden";
                j.style.outline = "0";
                j.style.margin = "0";
                j.style.padding = "0";
                j.style.textAlign = "left";
                j.style.fontSize = f.fontSize;
                j.style.fontFamily = f.fontFamily;
                j.style.backgroundColor = f.backgroundColor;
                j.style.zIndex = f.dropDownZIndex;
                j.style.cursor = "default";
                j.style.borderStyle = "solid";
                j.style.borderWidth = "1px";
                j.style.borderColor = f.dropDownBorderColor;
                j.style.overflowX = "hidden";
                j.style.whiteSpace = "pre";
                j.style.display = "block";
                var q = function (u) {
                    var v = [];
                    var s = 0;
                    var y = -1;
                    var t = function (e) {
                        
                        var label = alabels[e.currentTarget.getAttribute('dindex')];
                        var d = $("#tipsy");
                        d.html("<div class='hj'><br/>Type:" + label.Type + "<br/>ParentLabelPath:" + label.ParentLabelPath + "</div>");
                        var offset = $(e.currentTarget).offset();
                        d.css({                
                            "top": (offset.top-65) + "px",
                            "left" : offset.left +300+ "px"
                        })
                        d.show();
                        this.style.outline = "1px solid #ddd"
                    };
                    var r = function () {
                        $("#tipsy").hide();
                        this.style.outline = "0"
                    };
                    var x = function () {
                        w.o3();
                        w.o1(this.__hint)
                    };
                    var w = {
                        o3: function () {
                            u.style.visibility = "hidden"
                        },
                        refresh: function (B, G) {
                            
                            u.style.visibility = "hidden";
                            s = 0;
                            u.innerHTML = "";
                            var F = (window.innerHeight || document.documentElement.clientHeight);
                            var D = u.parentNode.getBoundingClientRect();
                            var A = D.top - 6;
                            var C = F - D.bottom - 6;
                            v = [];
                            for (var z = 0; z < G.length; z++) {
                                if (G[z].indexOf(B) !== 0) {
                                    continue
                                }
                                
                                var E = document.createElement("div");
                                E.setAttribute('dindex', z);
                                E.style.color = f.color;
                                E.onmouseover = t;
                                E.onmouseout = r;
                                E.onmousedown = x;
                                E.__hint = G[z];
                                E.innerHTML = B + "<b>" + G[z].substring(B.length) + "</b><div style='display:none;'></div>";
                                v.push(E);
                                u.appendChild(E)
                            }
                            if (v.length === 0) {
                                return
                            }
                            if (v.length === 1 && B === v[0].__hint) {
                                return
                            }
                            if (v.length < 2) {
                                return
                            }
                            w.o0(0);
                            if (A > C * 3) {
                                u.style.maxHeight = A + "px";
                                u.style.top = "";
                                u.style.bottom = "100%"
                            } else {
                                u.style.top = "100%";
                                u.style.bottom = "";
                                u.style.maxHeight = C + "px"
                            }
                            u.style.visibility = "visible"
                        },
                        o0: function (z) {
                            if (y != -1 && v[y]) {
                                v[y].style.backgroundColor = f.backgroundColor
                            }
                            v[z].style.backgroundColor = f.dropDownOnHoverBackgroundColor;
                            y = z
                        },
                        o2: function (z) {
                            if (u.style.visibility === "hidden") {
                                return ""
                            }
                            if (s + z === -1 || s + z === v.length) {
                                return v[s].__hint
                            }
                            s += z;
                            w.o0(s);
                            return v[s].__hint
                        },
                        o1: function () { }
                    };
                    return w
                };
                var d = q(j);
                d.o1 = function (r) {
                    l.value = k.value = m + r;
                    i.onChange(l.value);
                    n = l.value;
                    setTimeout(function () {
                        l.focus()
                    }, 0)
                };
                b.appendChild(j);
                c.appendChild(b);
                var o;
                var m;

                function h(r) {
                    if (o === undefined) {
                        o = document.createElement("span");
                        o.style.visibility = "hidden";
                        o.style.position = "fixed";
                        o.style.outline = "0";
                        o.style.margin = "0";
                        o.style.padding = "0";
                        o.style.border = "0";
                        o.style.left = "0";
                        o.style.whiteSpace = "pre";
                        o.style.fontSize = f.fontSize;
                        o.style.fontFamily = f.fontFamily;
                        o.style.fontWeight = "normal";
                        document.body.appendChild(o)
                    }
                    o.innerHTML = String(r).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
                    return o.getBoundingClientRect().right
                }
                var i = {
                    onArrowDown: function () { },
                    onArrowUp: function () { },
                    onEnter: function () { },
                    onTab: function () { },
                    onChange: function () {
                        i.repaint()
                    },
                    startFrom: 0,
                    options: [],
                    wrapper: b,
                    input: l,
                    hint: k,
                    dropDown: j,
                    prompt: e,
                    setText: function (r) {
                        k.value = r;
                        l.value = r
                    },
                    getText: function () {
                        return l.value
                    },
                    o3DropDown: function () {
                        d.o3()
                    },
                    repaint: function () {
                        var x = l.value;
                        var w = i.startFrom;
                        var s = i.options;
                        var r = s.length;
                        var v = x.substring(w);
                        m = x.substring(0, w);
                        k.value = "";
                        for (var u = 0; u < r; u++) {
                            var t = s[u];
                            if (t.indexOf(v) === 0) {
                                k.value = m + t;
                                break
                            }
                        }
                        j.style.left = h(m) + "px";
                        d.refresh(v, i.options)
                    }
                };
                var n;
                var g = function (r, t) {
                    n = r.value;
                    var s = function () {
                        var u = r.value;
                        if (n !== u) {
                            n = u;
                            t(u)
                        }
                    };
                    if (r.addEventListener) {
                        r.addEventListener("input", s, false);
                        r.addEventListener("keyup", s, false);
                        r.addEventListener("change", s, false)
                    } else {
                        r.attachEvent("oninput", s);
                        r.attachEvent("onkeyup", s);
                        r.attachEvent("onchange", s)
                    }
                };
                g(l, function (r) {
                    i.onChange(r)
                });
                var a = function (u) {
                    u = u || window.event;
                    var t = u.keyCode;
                    if (t == 33) {
                        return
                    }
                    if (t == 34) {
                        return
                    }
                    if (t == 27) {
                        d.o3();
                        k.value = l.value;
                        l.focus();
                        return
                    }
                    if (t == 39 || t == 35 || t == 9) {
                        if (t == 9) {
                            u.preventDefault();
                            u.stopPropagation();
                            if (k.value.length == 0) {
                                i.onTab()
                            }
                        }
                        if (k.value.length > 0) {
                            d.o3();
                            l.value = k.value;
                            var v = n != l.value;
                            n = l.value;
                            if (v) {
                                i.onChange(l.value)
                            }
                        }
                        return
                    }
                    if (t == 13) {
                        if (k.value.length == 0) {
                            i.onEnter()
                        } else {
                            var s = (j.style.visibility == "hidden");
                            d.o3();
                            if (s) {
                                k.value = l.value;
                                l.focus();
                                i.onEnter();
                                return
                            }
                            l.value = k.value;
                            var v = n != l.value;
                            n = l.value;
                            if (v) {
                                i.onChange(l.value)
                            }
                        }
                        return
                    }
                    if (t == 40) {
                        var r = d.o2(+1);
                        if (r == "") {
                            i.onArrowDown()
                        }
                        k.value = m + r;
                        return
                    }
                    if (t == 38) {
                        var r = d.o2(-1);
                        if (r == "") {
                            i.onArrowUp()
                        }
                        k.value = m + r;
                        u.preventDefault();
                        u.stopPropagation();
                        return
                    }
                    k.value = ""
                };
                if (l.addEventListener) {
                    l.addEventListener("keydown", a, false)
                } else {
                    l.attachEvent("onkeydown", a)
                }
                return i
            };

        </script>

        <style>
            .searchBtn {
                border: 0;
                position: absolute;
                width: 100px;
                cursor: pointer;
                margin: 2px -38PX;
                border-left: 2px solid skyblue;
                height: 50px;
                font-weight: 900;
                font-size: 12px;
                background-color: #f6f5ef;
                color: #009F8A;
                -webkit-border-radius: 0px 5px 5px 0px;
                -moz-border-radius: 0px 5px 5px 0px;
                border-radius: 0px 5px 5px 0px;
            }
        </style>


        <script src="http://d3js.org/d3.v3.js"></script>
        <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
        <script src="//code.jquery.com/jquery-1.10.2.js"></script>
        <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

        <input type="button" value="SEARCH" class="searchBtn" onclick="Send()"
               style="position: relative;left: 50%; right: 50%; bottom: 50%;" />
      

    </div>
</body>
</html>
